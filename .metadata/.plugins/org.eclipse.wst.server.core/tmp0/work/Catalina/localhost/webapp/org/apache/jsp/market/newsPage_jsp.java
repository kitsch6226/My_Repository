/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.39
 * Generated at: 2020-10-27 01:00:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.market;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class newsPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>newsPage</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("*{\r\n");
      out.write("  margin:0;\r\n");
      out.write("  padding:0;\r\n");
      out.write("}\r\n");
      out.write(".center{\r\n");
      out.write("\tpadding:10px;\r\n");
      out.write("}\r\n");
      out.write(".topdiv{\r\n");
      out.write("\twidth:60%;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write(".center{\r\n");
      out.write("\tbackground-color:#ededed;\r\n");
      out.write("\tmin-width:1220px;\r\n");
      out.write("\tmin-height:1000px;\r\n");
      out.write("}\r\n");
      out.write(".centerdiv{\r\n");
      out.write("\twidth:100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("/* \tbackground-color:red; */\r\n");
      out.write("}\r\n");
      out.write(".boarddiv{\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\twidth:52%;\r\n");
      out.write("\tbackground-color:blue;\r\n");
      out.write("}\r\n");
      out.write(".board{\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\twidth:100%;\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("\tborder-spacing:0;\r\n");
      out.write("\tbackground-color: #eeeeee;\r\n");
      out.write("}\r\n");
      out.write(".board tr{\r\n");
      out.write("\tborder: 1px solid darkgray;\r\n");
      out.write("}\r\n");
      out.write(".board th,td{\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("\tpadding:4px 6px;\r\n");
      out.write("\tborder-bottom:1px solid #c9c9c9;\r\n");
      out.write("}\r\n");
      out.write(".board th{\r\n");
      out.write("background-color:#ffc042;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".board td a:link, .board td a:visited{\r\n");
      out.write("text-decoration: none;\r\n");
      out.write("color:black;\r\n");
      out.write("}\r\n");
      out.write(".board td a:hover{\r\n");
      out.write("text-decoration:underline;\r\n");
      out.write("}\r\n");
      out.write(".rightad, .leftad{\r\n");
      out.write("padding:0 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".writebtn{\r\n");
      out.write("display:block;\r\n");
      out.write("float:right;\r\n");
      out.write("width:60px;\r\n");
      out.write("height:30px;\r\n");
      out.write("margin: 10px 0;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"center\">\r\n");
      out.write("\t\t<div class=\"leftad\" style=\"float:left\">\r\n");
      out.write("\t\t\t<p align=\"center\">\r\n");
      out.write("\t\t\t\t<img src=\"img/sidebanner1.png\" onclick=\"location.href='http://www.naver.com'\" style=\"cursor:pointer;\"/>\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"rightad\" style=\"float:right\">\r\n");
      out.write("\t\t\t<p align=\"center\">\r\n");
      out.write("\t\t\t\t<img src=\"img/sidebanner1.png\" onclick=\"location.href='http://www.naver.com'\" style=\"cursor:pointer;\"/>\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"centerdiv\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t<div class=\"topdiv\">\r\n");
      out.write("\t\t\t\t<p align=\"center\">\r\n");
      out.write("\t\t\t\t\t<img src=\"img/topbanner1.png\" onclick=\"location.href='http://www.naver.com'\" style=\"cursor:pointer;\"/>\r\n");
      out.write("\t\t\t\t</p>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"boarddiv\">\r\n");
      out.write("\t\t\t\t<table class=\"board\">\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th style=\"width:4%;\">번호</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th style=\"width:56%;\">제목</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th style=\"width:10%;\">작성자</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th style=\"width:10%;\">작성일</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th style=\"width:10%;\">조회수</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th style=\"width:10%;\">추천수</th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>1123</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><a href=\"#\">어서와 냠냠! 이용 가이드!</a></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>냠냠</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>2020-10-26</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>1020</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>102</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>1122</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><a href=\"#\">어서와 냠냠! 이용 가이드!</a></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>냠냠</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>2020-10-26</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>1020</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>102</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t<button class=\"writebtn\">글쓰기</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("</div> \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

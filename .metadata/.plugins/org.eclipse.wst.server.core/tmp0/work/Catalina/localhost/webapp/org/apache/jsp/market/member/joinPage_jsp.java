/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.39
 * Generated at: 2020-11-13 00:15:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.market.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class joinPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>냠냠 마켓 회원가입 페이지</title>\r\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/webapp/market/img/favicon.ico\"/>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write(".top{\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\theight: 54px\r\n");
      out.write("}\r\n");
      out.write(".top>p>img{\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\theight: 40px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".falsebox{\r\n");
      out.write("margin:10px auto;\r\n");
      out.write("width:396px;\r\n");
      out.write("height: 100px;\r\n");
      out.write("border: 2px solid #eb3636;\r\n");
      out.write("border-radius: 2px;\r\n");
      out.write("}\r\n");
      out.write(".falsebox p{\r\n");
      out.write("font-family\r\n");
      out.write("background-color: red;\r\n");
      out.write("width: 70%;\r\n");
      out.write("margin: 16px auto;\r\n");
      out.write("}\r\n");
      out.write("#p1 b{\r\n");
      out.write("font-fmaily:NanumBarunGothic;\r\n");
      out.write("font-size:20px;\r\n");
      out.write("color: #eb3636;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".center {\r\n");
      out.write("\twidth: 400px;\r\n");
      out.write("\theight: 630px;\r\n");
      out.write("\tborder: 1px solid #d9d9d9;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\tborder-radius: 8px;\r\n");
      out.write("}\r\n");
      out.write("table {\r\n");
      out.write("\tborder=\"1\";\r\n");
      out.write("\theight: 540px;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("table tr td{\r\n");
      out.write("\tfont-size:14px;\r\n");
      out.write("\tfont-family:Arial;\r\n");
      out.write("\tfont-weight:normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table tr td input{\r\n");
      out.write("margin-left: 10px;\r\n");
      out.write("border: 1px solid #7a7a7a;\r\n");
      out.write("border-radius: 3px;\r\n");
      out.write("width: 240px; height:30px;\r\n");
      out.write("}\r\n");
      out.write("hr{\r\n");
      out.write("border: 1px solid #d9d9d9;\r\n");
      out.write("}\r\n");
      out.write("a:link{\r\n");
      out.write("\tcolor: #16528a;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("}\r\n");
      out.write(" a:visited{\r\n");
      out.write("\tcolor: #16528a;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("}\r\n");
      out.write(".bottom{\r\n");
      out.write("\tmargin: 20px auto;\r\n");
      out.write("}\r\n");
      out.write(".bottom>p{\r\n");
      out.write("\tcolor: gray;\r\n");
      out.write("\tfont-family:arial;\r\n");
      out.write("\tfont-size:14px;\r\n");
      out.write("\tletter-spacing:1px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\tvar pom = document.getElementById(\"frm\");\r\n");
      out.write("\tvar address1 = document.getElementById(\"address1\").value;\r\n");
      out.write("\tvar address2 = document.getElementById(\"address2\").value;\r\n");
      out.write("\t\r\n");
      out.write("\tfunction checkPasscode() {\r\n");
      out.write("\t\tvar passcode_input = document.getElementById(\"pw\");\r\n");
      out.write("\t\tvar passcode_input2 = document.getElementById(\"pw2\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (passcode_input.value !== passcode_input2.value) {\r\n");
      out.write("\t\t\tpasscode_input2.setCustomValidity(\"확인 비밀번호가 틀렸습니다.\");\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tpasscode_input2.setCustomValidity(\"\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<form action=\"addMember.do\" method=\"post\" id=\"frm\" name=\"frm\">\r\n");
      out.write("\t\t<div class=\"top\">\r\n");
      out.write("\t\t\t<p align=\"center\"><img src=\"/webapp/market/img/nyamlogo.png\" onclick='location.href=\"/webapp/ShopController?command=category\"' style=\"cursor:pointer;\" name=\"profile\" /></p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 아이디 중복 비밀번호 확인 체크 박스 -->\r\n");
      out.write("\t\t");
String check = request.getParameter("check");
		  //String check = (String)session.getAttribute("check");
		if (check==null){
		}else if(check.equals("idfalse")){
      out.write(" \r\n");
      out.write("\t\t<div class=\"falsebox\">\r\n");
      out.write("\t\t\t<p id=\"p1\"><b>문제가 발생했어요!</b></p>\r\n");
      out.write("\t\t\t<p id=\"p2\">중복된 메일주소입니다!</p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");
}else if(check.equals("pwfalse")){ 
      out.write("\r\n");
      out.write("\t\t<div class=\"falsebox\">\r\n");
      out.write("\t\t\t<p id=\"p1\"><b>문제가 발생했어요!</b></p>\r\n");
      out.write("\t\t\t<p id=\"p2\">확인 비밀번호가 올바르지 않습니다.</p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");
}else if(check.equals("fail")){ 
      out.write("\r\n");
      out.write("\t\t<div class=\"falsebox\">\r\n");
      out.write("\t\t\t<p id=\"p1\"><b>문제가 발생했어요!</b></p>\r\n");
      out.write("\t\t\t<p id=\"p2\">가입에 실패했습니다ㅠ</p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t<div class=\"center\">\r\n");
      out.write("\t\t\t<div class=\"centerbox\">\r\n");
      out.write("\t\t\t\t<table style=\"margin: 12px auto\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"3\" style=\"font-size:26px; font-weight:bold;\">Create account</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<td>MAIL</td>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"3\" ><input type=\"email\" name=\"mail\" pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" title=\"example@example.com\" maxlength=\"106\" required/></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<td>NAME</td>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"3\" ><input type=\"text\" name=\"name\" pattern=\"[가-힣a-zA-Z]{2,10}\" title=\"Kor/Eng Name\" maxlength=\"10\" required/></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<td>PW</td>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"password\" id=\"pw\" name=\"pw\" pattern=\"(?=^.{8,30}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n");
      out.write("\t\t\t\t\t\t\ttitle=\"영문 대소,특수문자 포함 최소 8자\" maxlength=\"30\" required/>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<td>PW CHECK</td>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" id=\"pw2\" name=\"pw2\" placeholder=\"비밀번호를 다시 입력해 주세요.\" oninput=\"checkPasscode();\" required/>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<td>POST</td>\r\n");
      out.write("\t\t\t\t\t\t<!--<th style=\"background-color: #A37628; border-radius:10px\">주소</th>-->\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"text\" name= \"postnumber\" id=\"postnumber\"pattern=\"^[0-9]{4,6}\" title=\"Only Numbers\" placeholder=\"FIND 버튼을 눌러주세요.\" style=\"width: 180px; height:30px;\" maxlength=\"5\" required/></td>\r\n");
      out.write("\t\t\t\t\t\t<td align=\"left\"><input type=\"button\" name=\"find\" value=\"Find\" style=\"width: 44px; height:34px;\" onclick=\"sample6_execDaumPostcode()\" required/></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<td>ADDRESS1</td>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"3\"><input type=\"text\" name=\"address1\" id=\"address1\" required/></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<td>ADDRESS2</td>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" name=\"address2\" id=\"address2\" placeholder=\"상세 주소를 기입해 주세요.\" required/>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"address\" id=\"address\"/>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"3\" align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"submit\" style=\"margin-left:0px; width: 334px; height: 36px; background-color:#ffea00;\tborder: 1px solid #a68200;\r\n");
      out.write("\t\t\t\t\t\t\tborder-radius: 3px;\">당신의 냠냠계정 만들기</button>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"3\" style=\"font-size:14px; font-weight:normal\">가입하시면 냠냠의 <a href=\"http://www.naver.com\">이용약관</a>과 <a href=\"http://www.naver.com\">개인정보 정책</a>에<br>동의하는 것입니다.</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t<hr>\t\r\n");
      out.write("\t\t\t\t<div style=\"width:340px; margin:20px auto;\">\r\n");
      out.write("\t\t\t\t\t<p style=\"font-size:14px; font-weight:normal\">이미 아이디가 있으세요? <a href=\"/webapp/ShopController?command=login\">로그인 하기 ▶</a></p>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"bottom\">\r\n");
      out.write("\t\t\t\t\t<p align=\"center\">ⓒ2020 Nyam².com INC. or its affiliates.</p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("<script src=\"https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("    function sample6_execDaumPostcode() {\r\n");
      out.write("        new daum.Postcode({\r\n");
      out.write("            oncomplete: function(data) {\r\n");
      out.write("                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("\r\n");
      out.write("                // 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n");
      out.write("                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("                var addr = ''; // 주소 변수\r\n");
      out.write("                var extraAddr = ''; // 참고항목 변수\r\n");
      out.write("\r\n");
      out.write("                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n");
      out.write("                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\r\n");
      out.write("                    addr = data.roadAddress;\r\n");
      out.write("                } else { // 사용자가 지번 주소를 선택했을 경우(J)\r\n");
      out.write("                    addr = data.jibunAddress;\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\r\n");
      out.write("                if(data.userSelectedType === 'R'){\r\n");
      out.write("                    // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("                    // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("                    if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\r\n");
      out.write("                        extraAddr += data.bname;\r\n");
      out.write("                    }\r\n");
      out.write("                    // 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("                    if(data.buildingName !== '' && data.apartment === 'Y'){\r\n");
      out.write("                        extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("                // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("                document.getElementById('postnumber').value = data.zonecode;\r\n");
      out.write("                document.getElementById(\"address1\").value = addr;\r\n");
      out.write("                // 커서를 상세주소 필드로 이동한다.\r\n");
      out.write("                document.getElementById(\"address2\").focus();\r\n");
      out.write("            }\r\n");
      out.write("        }).open();\r\n");
      out.write("    }\r\n");
      out.write("</script>\t\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
